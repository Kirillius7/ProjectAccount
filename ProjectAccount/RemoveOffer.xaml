<Window x:Class="ProjectAccount.RemoveOffer"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ProjectAccount"
        mc:Ignorable="d"
        Title="RemoveAnnouncment" Height="450" Width="800"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen">
    <Grid Background="#FF5F91B7">
        
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="111"/>
            <ColumnDefinition Width="578"/>
            <ColumnDefinition Width="111"/>
        </Grid.ColumnDefinitions>
        
        <Button x:Name="Apply" Content="Confirm" Command ="{Binding RemoveOfferCommand}" HorizontalAlignment="Left" Margin="200,341,0,0" VerticalAlignment="Top" Width="86" Height="31" Background="White" BorderBrush="Black" Grid.Column="1">
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Border Name="buttonBorder" Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="Center"
                        VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="buttonBorder" Property="Background" Value="LightGray" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="buttonBorder" Property="Background" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
               
        <Button x:Name="ReturnB" Content="Back" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Click="ReturnB_Click" Height="27" Width="68" Background="White" BorderBrush="Black">
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Border Name="buttonBorder" Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="Center"
                        VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="buttonBorder" Property="Background" Value="LightGray" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="buttonBorder" Property="Background" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        
        <Button x:Name="search_offer" Content="Search" Command ="{Binding searchAnnouncment}" HorizontalAlignment="Center" Margin="0,170,0,0" VerticalAlignment="Top" Width="86" Height="31" Background="White" BorderBrush="Black">
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Border Name="buttonBorder" Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="Center"
                        VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="buttonBorder" Property="Background" Value="LightGray" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="buttonBorder" Property="Background" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        
        <Button x:Name="Clear" Content="Clear" HorizontalAlignment="Left" Margin="290,341,0,0" VerticalAlignment="Top" Width="86" Height="31" Click="Clear_Click" Background="White" BorderBrush="Black" Grid.Column="1">
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Border Name="buttonBorder" Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="Center"
                        VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="buttonBorder" Property="Background" Value="LightGray" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="buttonBorder" Property="Background" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        
        <Button x:Name="filter_offers" Content="Filter" HorizontalAlignment="Left" Margin="462,350,0,0" VerticalAlignment="Top" Command ="{Binding filterAnnouncment}"  Width="86" Height="31" BorderBrush="Black" Background="White" Grid.Column="1" Grid.ColumnSpan="2">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="buttonBorder" Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="Center"
                        VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="buttonBorder" Property="Background" Value="LightGray" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="buttonBorder" Property="Background" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        
        <ListView x:Name="Listv" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled" ItemsSource="{Binding _announcments}" Margin="0,77,0,205" BorderBrush="Black" Grid.Column="1">
            <ListView.View>
                <GridView>
                    <GridViewColumn DisplayMemberBinding="{Binding id}" Header="ID" Width="35"/>
                    <GridViewColumn DisplayMemberBinding="{Binding nameprod}" Header="Name" Width="100"/>
                    <GridViewColumn DisplayMemberBinding="{Binding nameprob}" Header="Problem" Width="100"/>
                    <GridViewColumn DisplayMemberBinding="{Binding typeprob}" Header="Type problem" Width="125"/>
                    <GridViewColumn DisplayMemberBinding="{Binding state}" Header="State" Width="100"/>
                    <GridViewColumn DisplayMemberBinding="{Binding urgency}" Header="Urgency" Width="100"/>
                </GridView>
            </ListView.View>
        </ListView>
        
        <ComboBox x:Name="cmbbox1" HorizontalAlignment="Left" Height="24" Margin="445,257,0,0" VerticalAlignment="Top" Text="{Binding filter, UpdateSourceTrigger=PropertyChanged}" ToolTip ="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Mode=Self}}" Width="120" Grid.Column="1" FontSize="14">
            <ComboBoxItem Content="Name" />
            <ComboBoxItem Content="Problem" />
            <ComboBoxItem Content="Type problem" />
            <ComboBoxItem Content="State" />
            <ComboBoxItem Content="Urgency" />
        </ComboBox>
        
        <TextBox x:Name="txt1" HorizontalAlignment="Center" Height="22" Margin="0,298,0,0" TextWrapping="Wrap" Text="{Binding id, UpdateSourceTrigger=PropertyChanged}" ToolTip ="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Mode=Self}}" VerticalAlignment="Top" Width="86" Grid.Column="1" FontSize="14"/>
        
        <TextBox x:Name="txt3" HorizontalAlignment="Left" Height="22" Margin="445,310,0,0" TextWrapping="Wrap" Text="{Binding type, UpdateSourceTrigger=PropertyChanged}" ToolTip ="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Mode=Self}}" VerticalAlignment="Top" Width="120" RenderTransformOrigin="0.491,0.511" Grid.Column="1" FontSize="14"/>
        
        <TextBox x:Name="txt2" HorizontalAlignment="Center" Height="22" Margin="0,130,0,0" TextWrapping="Wrap" Text="{Binding idnew, UpdateSourceTrigger=PropertyChanged}" ToolTip ="{Binding RelativeSource={RelativeSource Mode=Self}, Path = (Validation.Errors)[0].ErrorContent}" VerticalAlignment="Top" Width="86" FontSize="14"/>
        
        <Label x:Name="label_filter" Content="Filter" HorizontalAlignment="Left" Margin="486,231,0,0" VerticalAlignment="Top" Grid.Column="1" Width="42" Foreground="White" OpacityMask="Black"/>
       
        <Label x:Name="label_filter_data" Content="Data" HorizontalAlignment="Left" Margin="488,284,0,0" VerticalAlignment="Top" Grid.Column="1" Width="38" Foreground="White" OpacityMask="Black"/>
        
        <Label x:Name="label_id" Content="ID" HorizontalAlignment="Center" Margin="0,101,0,0" VerticalAlignment="Top" Width="22" Foreground="White"/>
        
        <Label x:Name="label_id_product" Content="ID" HorizontalAlignment="Center" Margin="0,270,0,0" VerticalAlignment="Top" Grid.Column="1" Width="22" Foreground="White" Height="28"/>
        
        <Label x:Name="main_label" Content="Remove announcment" HorizontalAlignment="Center" Margin="0,24,0,0" VerticalAlignment="Top" Background="{x:Null}" Foreground="White" FontSize="20" Grid.Column="1"/>
                 
    </Grid>
</Window>
